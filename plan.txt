-l: List in long format. If the output is to a terminal, a total sum for all the file sizes is output on a line before the long listing.
-R: Recursively list subdirectories encountered.
-a: Include directory entries whose names begin with a dot (.).
-A: List all entries except for . and ...  Always set for the super-user.
-r: Reverse the order of the sort to get reverse lexicographical order or the oldest entries first (or largest files last, if combined with sort by size)
-t: Sort by time modified (most recently modified first) before sorting the operands by lexicographical order.

bonus:
-G: Enable colorized output.  This option is equivalent to defining CLICOLOR in the environment.
-g: Suppress Owner
		[This option is only available for compatibility with POSIX; it is used to display the group name in the long (-l) format output (the owner name is suppressed).]
-d: Directories are listed as plain files (not searched recursively).
-f: Output is not sorted.  This option turns on the -a option.
-u: Use time of last access, instead of last modification of the file for sorting (-t) or long printing (-l).

	args_struct:
(all char bool)
long
recursive
all (0=false, 1=true, 2=no . and ..)
reverse_sort
sort_time
colour
noowner
no_recurse (list dirs as plain files)
no_sort
sort_access

use array with structures as elements, so can be sorted easily

	element structure:
elem->perms
elem->inodes
elem->user
elem->group
elem->fsize
elem->date
elem->name
elem->symlink_target

ls
\- parse args -> args_struct
   recursive?
	loop - show_folder(args_struct)
   show_folder(args_struct)
   \- get each attribute
	  sort_array
	foreach item in array
	  output_line(args_struct, elem_struct)

get_folder_short (returns array of elements)
	get_filename
  filter
get_folder_long (returns array of elements)
  use opendir() to get DIR struct
  use readdir(DIR) in loop to get all entries
	  dirent holds:
		file type
		file name
	stat(filename)
	  stat struct holds:
		mode (permissions)
		number of links(inodes)
		UID
		GID
		times
		file size (bytes)
	parse_mode (get perms)
	parse_user (get user)
	parse_group (get group)
	set size (instruction)
	get_last_modified (get output string from timespec)
	  grab seconds from struct, check difference from current time,
	  get string from seconds, edit string appropriately
	set filename (instruction)
	if (stat_struct->mode/dirent_struct->type contains symlink)
	  set symlink target
sort_array
output_array


allowed functions:
write         ssize_t write(int fd, const void *buf, size_t nbyte);
opendir       DIR *opendir(const char *filename);
readdir       struct dirent *readdir(DIR *dirp);
closedir      int closedir(DIR *dirp);
stat          int stat(const char *restrict path, struct stat *restrict buf);
lstat         int lstat(const char *restrict path, struct stat *restrict buf);
getpwuid      struct passwd *getpwuid(uid_t uid);
getgrgid      struct group *getgrgid(gid_t gid);
listxattr     ssize_t listxattr(const char *path, char *namebuf, size_t size, int options);
getxattr      ssize_t getxattr(const char *path, const char *name, void *value, size_t size, u_int32_t position, int options);
time          time_t time(time_t *tloc);
ctime         char *ctime(const time_t *clock);
readlink      ssize_t readlink(const char *restrict path, char *restrict buf, size_t bufsize);
malloc        void *malloc(size_t size);
free          void free(void *ptr);
perror        void perror(const char *s);
strerror      char *strerror(int errnum);
exit          void exit(int status);

LONG OPTIONS:
  If the -l option is given, the following information is displayed for each file: file mode, number of links, owner name, group name, number of bytes in the file, abbreviated month, day-of-month file was last modified, hour file last modified, minute file last modified, and the pathname.  In addition, for each directory whose contents are displayed, the total number of 512-byte blocks used by the files in the directory is displayed on a line by itself, immediately before the information for the files in the directory.  If the file or directory has extended attributes, the permissions field printed by the -l option is followed by a '@' character.  Otherwise, if the file or directory has extended security information (such as an access control list), the permissions field printed by the -l option is followed by a '+' character.

  If the modification time of the file is more than 6 months in the past or future, then the year of the last modification is displayed in place of the hour and minute fields.

  If the owner or group names are not a known user or group name, or the -n option is given, the numeric ID's are displayed.

  If the file is a character special or block special file, the major and minor device numbers for the file are displayed in the size field.  If the file is a symbolic link, the pathname of the linked-to file is preceded by ``->''.

  The file mode printed under the -l option consists of the entry type, owner permissions, and group permissions.  The entry type character describes the type of file, as follows:

	b     Block special file.
	c     Character special file.
	d     Directory.
	l     Symbolic link.
	s     Socket link.
	p     FIFO.
	-     Regular file.

  The next three fields are three characters each: owner permissions, group permissions, and other permissions.  Each field has three character positions:

	1.   If r, the file is readable; if -, it is not readable.

	2.   If w, the file is writable; if -, it is not writable.

	3.   The first of the following that applies:

		S     If in the owner permissions, the file is not executable and set-user-ID mode is set.  If in the group permissions, the file is not executable and set-group-ID mode is set.

		s     If in the owner permissions, the file is executable and set-user-ID mode is set.  If in the group permissions, the file is executable and setgroup-ID mode is set.

		x     The file is executable or the directory is searchable.

		-     The file is neither readable, writable, executable, nor set-user-ID nor set-group-ID mode, nor sticky.  (See below.)

	  These next two apply only to the third character in the last group (other permissions).

		T     The sticky bit is set (mode 1000), but not execute or search permission.  (See chmod(1) or sticky(8).)

		t     The sticky bit is set (mode 1000), and is searchable or executable.  (See chmod(1) or sticky(8).)
